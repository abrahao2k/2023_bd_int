# Form implementation generated from reading ui file 'alteracao.ui'
#
# Created by: PyQt6 UI code generator 6.6.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox      # janela de diálogo

import mariadb
conexao = mariadb.connect(host="localhost", user="root",
                          password="", database = "escola")
cursor = conexao.cursor()
print("Conectado ao banco de dados.")

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(329, 258)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label_codigo = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_codigo.setObjectName("label_codigo")
        self.gridLayout.addWidget(self.label_codigo, 0, 0, 1, 1)
        self.pushButton_abrir = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_abrir.setObjectName("pushButton_abrir")
        
        self.pushButton_abrir.clicked.connect(self.abrir)
        
        self.gridLayout.addWidget(self.pushButton_abrir, 0, 2, 1, 1)
        self.lineEdit_codigo = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_codigo.setObjectName("lineEdit_codigo")
        self.gridLayout.addWidget(self.lineEdit_codigo, 0, 1, 1, 1)
        self.label_nome = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_nome.setObjectName("label_nome")
        self.gridLayout.addWidget(self.label_nome, 2, 0, 1, 1)
        self.label_curso = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_curso.setObjectName("label_curso")
        self.gridLayout.addWidget(self.label_curso, 3, 0, 1, 1)
        self.line = QtWidgets.QFrame(parent=self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 0, 1, 3)
        self.label_turno = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_turno.setObjectName("label_turno")
        self.gridLayout.addWidget(self.label_turno, 4, 0, 1, 1)
        self.label_obs = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_obs.setObjectName("label_obs")
        self.gridLayout.addWidget(self.label_obs, 6, 0, 1, 1)
        self.label_extras = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_extras.setObjectName("label_extras")
        self.gridLayout.addWidget(self.label_extras, 5, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.radioButton_manha = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_manha.setObjectName("radioButton_manha")
        self.horizontalLayout.addWidget(self.radioButton_manha)
        self.radioButton_tarde = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_tarde.setObjectName("radioButton_tarde")
        self.horizontalLayout.addWidget(self.radioButton_tarde)
        self.radioButton_noite = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_noite.setObjectName("radioButton_noite")
        self.horizontalLayout.addWidget(self.radioButton_noite)
        self.gridLayout.addLayout(self.horizontalLayout, 4, 1, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.checkBox_atleta = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_atleta.setObjectName("checkBox_atleta")
        self.horizontalLayout_2.addWidget(self.checkBox_atleta)
        self.checkBox_bolsista = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_bolsista.setObjectName("checkBox_bolsista")
        self.horizontalLayout_2.addWidget(self.checkBox_bolsista)
        self.gridLayout.addLayout(self.horizontalLayout_2, 5, 1, 1, 1)
        self.lineEdit_nome = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit_nome.setObjectName("lineEdit_nome")
        self.gridLayout.addWidget(self.lineEdit_nome, 2, 1, 1, 1)
        self.comboBox_curso = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox_curso.setObjectName("comboBox_curso")
        self.comboBox_curso.addItem("")
        self.comboBox_curso.addItem("")
        self.comboBox_curso.addItem("")
        self.comboBox_curso.addItem("")
        self.gridLayout.addWidget(self.comboBox_curso, 3, 1, 1, 1)
        self.plainTextEdit_obs = QtWidgets.QPlainTextEdit(parent=self.centralwidget)
        self.plainTextEdit_obs.setObjectName("plainTextEdit_obs")
        self.gridLayout.addWidget(self.plainTextEdit_obs, 6, 1, 1, 1)
        self.pushButton_atualizar = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_atualizar.setObjectName("pushButton_atualizar")
        
        self.pushButton_atualizar.clicked.connect(self.atualizar)
        
        self.gridLayout.addWidget(self.pushButton_atualizar, 7, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Alteração de Dados"))
        self.label_codigo.setText(_translate("MainWindow", "Código:"))
        self.pushButton_abrir.setText(_translate("MainWindow", "ABRIR"))
        self.label_nome.setText(_translate("MainWindow", "Nome:"))
        self.label_curso.setText(_translate("MainWindow", "Curso:"))
        self.label_turno.setText(_translate("MainWindow", "Turno:"))
        self.label_obs.setText(_translate("MainWindow", "Obs.:"))
        self.label_extras.setText(_translate("MainWindow", "Extras:"))
        self.radioButton_manha.setText(_translate("MainWindow", "Manhã"))
        self.radioButton_tarde.setText(_translate("MainWindow", "Tarde"))
        self.radioButton_noite.setText(_translate("MainWindow", "Noite"))
        self.checkBox_atleta.setText(_translate("MainWindow", "Atleta"))
        self.checkBox_bolsista.setText(_translate("MainWindow", "Bolsista"))
        self.comboBox_curso.setItemText(0, _translate("MainWindow", "Edificações"))
        self.comboBox_curso.setItemText(1, _translate("MainWindow", "Eletrotécnica"))
        self.comboBox_curso.setItemText(2, _translate("MainWindow", "Informática"))
        self.comboBox_curso.setItemText(3, _translate("MainWindow", "Mecânica"))
        self.pushButton_atualizar.setText(_translate("MainWindow", "ATUALIZAR"))

    def abrir(self):
        codigo = self.lineEdit_codigo.text()  # captura o código digitado
        comando = "SELECT * FROM aluno WHERE codigo = " + codigo
        cursor.execute(comando)
        dados = cursor.fetchall()  # converte o resultado em uma lista
        
        if len(dados) == 0:    # se a lista esta vazia, não achou o registro
            msg = QMessageBox()
            msg.setText("Registro não encontrado.")
            msg.exec()
        
        else:    # encontrou o registro
            linha = dados[0]    # transfere a sub-lista para uma lista
            
            # preencher o formulário com os dados que vieram do banco
            self.lineEdit_nome.setText(linha[1])
            
            self.comboBox_curso.setCurrentText(linha[2])
            
            if linha[3] == "Manhã":
                self.radioButton_manha.setChecked(True)
            elif linha[3] == "Tarde":
                self.radioButton_tarde.setChecked(True)
            elif linha[3] == "Noite":
                self.radioButton_noite.setChecked(True)
                
            if linha[4] == "sim":
                self.checkBox_atleta.setChecked(True) #marca
            else:
                self.checkBox_atleta.setChecked(False) #desmarca
            
            if linha[5] == "sim":
                self.checkBox_bolsista.setChecked(True) #marca
            else:
                self.checkBox_bolsista.setChecked(False) #desmarca
            
            self.plainTextEdit_obs.setPlainText(linha[6])
        
        
    def atualizar(self):
        codigo = self.lineEdit_codigo.text()  # captura o código
        
        nome = self.lineEdit_nome.text()
    
        curso = self.comboBox_curso.currentText()
        
        turno = ""
        if self.radioButton_manha.isChecked():
            turno = "Manhã"
        elif self.radioButton_tarde.isChecked():
            turno = "Tarde"
        elif self.radioButton_noite.isChecked():
            turno = "Noite"
        
        atleta = "não"
        if self.checkBox_atleta.isChecked():
            atleta = "sim"
        
        bolsista = "não"
        if self.checkBox_bolsista.isChecked():
            bolsista = "sim"
            
        obs = self.plainTextEdit_obs.toPlainText()
            
        comando = '''UPDATE aluno SET
                     nome = %s, curso = %s, turno = %s,
                     atleta = %s, bolsista = %s, obs = %s
                     WHERE codigo = %s '''
        
        cursor.execute(comando, (nome,curso,turno,atleta,bolsista,obs,codigo) )
        conexao.commit()
        msg = QMessageBox()
        msg.setText("Atualizado com sucesso.")
        msg.exec()
        
        #limpar os campos do formulário
        self.lineEdit_codigo.setText("")
        self.lineEdit_nome.setText("")
        self.comboBox_curso.setCurrentIndex(0)
        self.radioButton_manha.setChecked(True)
        self.checkBox_atleta.setChecked(False)
        self.checkBox_bolsista.setChecked(False)
        self.plainTextEdit_obs.setPlainText("")
        
        
        
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
